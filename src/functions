function usage() {
echo "$1"
cat << EOF
Usage: license-prepender [flags]
-h     --help                       Show help
-l     --license       <STRING>     Add License name
-a     --author        <STRING>     Add Author name
-y     --year          <STRING>     Add Year
-p     --path          <STRING>     Add Repository path
-d     --description   <STRING>     Add Description
-dr    --dry-run                    Show files affected by boilerplate prepend and don't execute
EOF
exit
}

function getLicenseBoilerplate() {
    local boilerplate=$(curl -s "${BOILERPLATES[$LICENSE_NAME]}")
    if [[ "${DESCRIPTION}" != "" ]]; then
        BOILERPLATE_CONTENT=$(echo -e "${boilerplate}" | sed -e "s/\[DESCRIPTION\]/$DESCRIPTION/" \
            -e "s/\[YEAR\]/${DATE}/" \
            -e "s/\[NAME\]/${AUTHOR}/")
    else
        BOILERPLATE_CONTENT=$(echo -e "${boilerplate}" | sed -e "s/\[YEAR\]/${DATE}/" \
            -e "s/\[NAME\]/${AUTHOR}/")
    fi
}

function addLicense() {
    LICENSE_CONTENT=$(curl -s "${LICENSES[$LICENSE_NAME]}")
    if [[ "$LICENSE_NAME" == "mit" ]]; then
        echo -e "$LICENSE_CONTENT" | sed -e "s/\[YEAR\]/${DATE}/" \
            -e "s/\[NAME\]/${AUTHOR}/" > "${REPO_PATH}/LICENSE"
    else
        echo -e "${LICENSE_CONTENT}" > "${REPO_PATH}/LICENSE"
    fi
}

function isBoilerplatePresent() {
    grep -Fo "$1" "$2" | wc -l
}

function getCommentedBoilerplate() {
    local license="$2"
    IFS=$'\n'; for line in ${BOILERPLATE_CONTENT[@]}; do
        license="${license}$4${line}\n"
    done
    license="${license}$3"
    echo -e "${license}"
}

function prepend() {
    if $6; then
        local paths="$2"
        IFS=$'\n'; for p in $paths; do
            IFS=' '; for subp in $p; do
                if [[ $(isBoilerplatePresent "${BOILERPLATE_CONTENT}" "${subp}") == "0" ]]; then
                    echo "Boilerplate prepended in ${subp}"
                    if ! ${DRY_RUN}; then
                        local commented_boilerplate=$(getCommentedBoilerplate "${LICENSE_NAME}" "$3" "$4" "$5")
                        echo -e "${commented_boilerplate}\n\n\n$(cat ${subp})" > "${subp}"
                    fi
                fi
            done
        done
    fi
}