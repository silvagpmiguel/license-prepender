function getLicenseBoilerplate() {
    local boilerplate=$(curl -s "${BOILERPLATES[$LICENSE_NAME]}")
    if [[ "$DESCRIPTION" != "" ]]; then
        BOILERPLATE_CONTENT=$(echo -e "${boilerplate}" | sed -e "s/\[DESCRIPTION\]/$DESCRIPTION/" \
            -e "s/\[YEAR\]/$DATE/" \
            -e "s/\[NAME\]/$AUTHOR/")
    else
        BOILERPLATE_CONTENT=$(echo -e "${boilerplate}" | sed -e "s/\[YEAR\]/$DATE/" \
            -e "s/\[NAME\]/$AUTHOR/")
    fi
}

function addLicense() {
    LICENSE_CONTENT=$(curl -s "${LICENSES[$LICENSE_NAME]}")
    if [[ "$LICENSE_NAME" == "mit" ]]; then
        echo -e "$LICENSE_CONTENT" | sed -e "s/\[YEAR\]/$DATE/" \
            -e "s/\[NAME\]/$AUTHOR/" > "$REPO_PATH/LICENSE"
    else
        echo -e "$LICENSE_CONTENT" > "$REPO_PATH/LICENSE"
    fi
}

function isBoilerplatePresent() {
    grep -Fxq "$1" "$2"
}

function getCommentedBoilerplate() {
    local license="$2"
    IFS=$'\n'; for line in ${BOILERPLATE_CONTENT[@]}; do
        license="${license}$4${line}\n"
    done
    license="${license}$3"
    echo -e "$license"
}

function prepend() {
    if $6; then
        local paths="$2"
        IFS=$'\n'; for p in $paths; do
            IFS=' '; for subp in $p; do
                if ! $(isBoilerplatePresent "$BOILERPLATE_CONTENT" "$subp"); then
                    local commented_boilerplate=$(getCommentedBoilerplate "${LICENSE_NAME}" "$3" "$4" "$5")
                    echo -e "${commented_boilerplate}\n\n\n$(cat ${subp})" > "$subp"
                fi
            done
        done
    fi
}